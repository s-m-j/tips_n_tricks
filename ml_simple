#Простейшая модель машинного обучения (студ)
# Импортируем pandas для работы с датасетами
import pandas as pd

# Путь к данным на которых учимся
iowa_file_path = '../input/home-data-for-ml-course/train.csv'

#Загружаем данные
home_data = pd.read_csv(iowa_file_path)

# Смотрим колонки датасета чтобы выбрать что будем предсказывать
home_data.columns

#По соглашению целевая функция называется y (что предсказываем)
y = home_data.SalePrice

#Выберем следующие независимые переменные
feature_names = ['LotArea','YearBuilt','1stFlrSF','2ndFlrSF','FullBath','BedroomAbvGr','TotRmsAbvGrd']

#И зададим выборку данных
X = home_data[feature_names]

#Статистика по выборке
X.describe()

# Пример данных
X.head() 

#
from sklearn.tree import DecisionTreeRegressor

#For model reproducibility, set a numeric value for random_state when specifying the model
iowa_model = DecisionTreeRegressor(random_state=1)

# Fit the model
iowa_model.fit(X, y)

#Делаем предсказания
predictions = iowa_model.predict(X)
print(predictions)

import pandas as pd
from sklearn.tree import DecisionTreeRegressor

# Path of the file to read
iowa_file_path = '../input/home-data-for-ml-course/train.csv'

home_data = pd.read_csv(iowa_file_path)
y = home_data.SalePrice
feature_columns = ['LotArea', 'YearBuilt', '1stFlrSF', '2ndFlrSF', 'FullBath', 'BedroomAbvGr', 'TotRmsAbvGrd']
X = home_data[feature_columns]

# Specify Model
iowa_model = DecisionTreeRegressor()
# Fit Model
iowa_model.fit(X, y)

#Еще один пример
import pandas as pd
from sklearn.tree import DecisionTreeRegressor

# Path of the file to read
iowa_file_path = '../input/home-data-for-ml-course/train.csv'

home_data = pd.read_csv(iowa_file_path)
y = home_data.SalePrice
feature_columns = ['LotArea', 'YearBuilt', '1stFlrSF', '2ndFlrSF', 'FullBath', 'BedroomAbvGr', 'TotRmsAbvGrd']
X = home_data[feature_columns]

# Specify Model
iowa_model = DecisionTreeRegressor()
# Fit Model
iowa_model.fit(X, y)

print("First in-sample predictions:", iowa_model.predict(X.head()))
print("Actual target values for those homes:", y.head().tolist())

# Делим датасет на учебную и проверочную часть. Для этого импортируем
from sklearn.model_selection import train_test_split

# Делим датасет на учебную и проверочную часть
train_X, val_X, train_y, val_y = train_test_split(X, y, random_state = 1)

# Определяем модель
iowa_model = DecisionTreeRegressor(random_state=1)

#Тренируем модель на тестовой выборке
iowa_model.fit(train_X, train_y)

#Делаем предсказания
val_predictions = iowa_model.predict(val_X)

#Смотрим качество предсказания
from sklearn.metrics import mean_absolute_error
val_mae = mean_absolute_error(val_y, val_predictions)

